{"version":3,"sources":["webpack:///./src/pages/admin/encrypt/index.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;qEAEqE;AAE1C;AACM;AACqB;AACW;AAChC;AAYjC,MAAM,cAAe,SAAQ,8EAAuD;IAApF;;QAEI,UAAK,GAAwB;YACzB,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,EAAE;YACZ,aAAa,EAAE,EAAE;SACpB;IAoCL,CAAC;IAlCG,kBAAkB,CAAC,QAA6B,EAAE,QAA6B;QAC3E,IAAI,CAAC,QAAQ,CAAC,OAAO,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,KAAK,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;YAE1F,IAAI,CAAC,QAAQ,CAAC;gBACV,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM;oBAClE,CAAC,CAAC,gDAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE;oBAC1E,CAAC,CAAC,EAAE;aACX,CAAC,CAAC;SACN;IACL,CAAC;IAED,MAAM;QACF,OAAO,kDAAK,KAAK,EAAC,OAAO;YACrB,iDAAI,KAAK,EAAC,eAAe,cAAa;YAEtC,kDAAK,KAAK,EAAC,eAAe;gBAClB,kDAAK,KAAK,EAAE,EAAC,KAAK,EAAC,MAAM,EAAC;oBAC1B,+DAAgB;oBAChB,uDAAU,KAAK,EAAE,EAAC,KAAK,EAAC,MAAM,EAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC,KAAK,EAAC,CAAC,GAAG,CAChG;gBAEN;oBACI,gEAAiB;oBACjB,oDAAO,IAAI,EAAC,UAAU,EAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,CAAC,CAAC,aAAa,CAAC,KAAK,EAAC,CAAC,GAAG,CACvF;gBAEN;oBACI,6EAA8B;oBAC9B,uDAAU,KAAK,EAAE,EAAC,KAAK,EAAC,MAAM,EAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,CACjE,CAEJ,CACJ,CAAC;IACX,CAAC;CACJ;AAED,6CAAa,CAAC;IACN,yCAAC,uDAAU,IAAC,KAAK,EAAC,OAAO,GAAE;IAC3B,yCAAC,cAAc,OAAE;IACjB,yCAAC,uDAAU,OAAE;CAChB,EACD,QAAQ,CAAC,IAAI,CAChB,CAAC","file":"toolsEncrypt~._src_pages_admin_encrypt_index.tsx~91727d01_d61d14136605dba516db.js","sourcesContent":["/* *************************************************************** **\n** * Â©2020 Michael Baker (project@absolutelynot.moe) | AGPL v3.0 * **\n** *************************************************************** */\n\nimport \"styles/index.scss\";\nimport * as Preact from \"preact\";\nimport { PageHeader, PageFooter } from \"pages/shared\";\nimport { PureComponent } from \"scripts/components/PureComponent\";\nimport CryptoJS from \"crypto-js\";\n \ninterface EncryptContentProps {\n\n}\n\ninterface EncryptContentState {\n    content: string,\n    password: string,\n    encryptedData: string\n}\n\nclass EncryptContent extends PureComponent<EncryptContentProps, EncryptContentState> {\n\n    state: EncryptContentState = {\n        content: \"\",\n        password: \"\",\n        encryptedData: \"\",\n    }\n\n    componentDidUpdate(oldProps: EncryptContentProps, oldState: EncryptContentState) {\n        if ((oldState.content !== this.state.content) || (oldState.password !== this.state.password)) {\n            \n            this.setState({\n                encryptedData: this.state.content.length && this.state.password.length\n                    ? CryptoJS.AES.encrypt(this.state.content, this.state.password).toString()\n                    : \"\"\n            });\n        }\n    }\n\n    render() {\n        return <div class=\"panel\">\n            <h1 class=\"panel-content\">Encrypt</h1>\n\n            <div class=\"panel-content\">\n                    <div style={{width:\"100%\"}}>\n                    <h3>Content</h3>\n                    <textarea style={{width:\"100%\"}} onChange={v => this.setState({content: v.currentTarget.value})}/>\n                </div>\n\n                <div>\n                    <h3>Password</h3>\n                    <input type=\"password\" onChange={v => this.setState({password: v.currentTarget.value})}/>\n                </div>\n\n                <div>\n                    <h3>Encrypted and Encoded</h3>\n                    <textarea style={{width:\"100%\"}} value={this.state.encryptedData}/>\n                </div>\n                \n            </div>\n        </div>;\n    }\n}\n\nPreact.render([\n        <PageHeader title=\"Title\"/>,\n        <EncryptContent/>,\n        <PageFooter/>\n    ],\n    document.body\n);"],"sourceRoot":""}